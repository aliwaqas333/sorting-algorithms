{"version":3,"sources":["components/widgets/_variables.js","components/widgets/column.js","components/useFunctions/useFunctions.js","components/bubble.js","components/widgets/columns.js","components/selection.js","components/layout.js","App.js","serviceWorker.js","index.js"],"names":["colorArray","getColor","height","color","id","current","width","style","backgroundColor","className","useFunctions","getRandomInt","min","max","Math","ceil","floor","random","getRandomArray","n","arr","Array","fill","forEach","item","index","calcWidth","screenWidth","numberOfCols","x","calcHeight","screenHeight","timer","currentColumn","swapped","window","innerWidth","innerHeight","addEventListener","location","reload","props","useState","sort","speed","setspeed","numberOfColumns","setnumberOfColumns","columnsArray","setcolumnsArray","start","setstart","getNewArray","handleSpeedChange","s","handleColumnsChange","swap","left","right","newArray","leftItem","rightItem","length","push","console","log","clearTimeout","setTimeout","onClick","LinearProgress","map","c","key","type","disabled","role","display","cols","e","preventDefault","currentMin","params","y","columns","stop","useStyles","makeStyles","root","Layout","history","useHistory","classes","React","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","App","path","Boolean","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a07d530.chunk.js","sourcesContent":["\r\nconst colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \r\n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\r\n\t\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \r\n\t\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\r\n\t\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \r\n\t\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\r\n\t\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \r\n\t\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\r\n\t\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \r\n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\r\n\r\nexport {colorArray}","import React from \"react\";\r\nimport { colorArray } from \"./_variables\";\r\n// import useFunctions from \"../useFunctions/useFunctions\";\r\n\r\nconst getColor = height => {\r\n  let color;\r\n  // const answer = x > 10 ? \"greater than 10\" : \"less than 10\";\r\n\r\n  if(height <= 500) color = colorArray[4]\r\n  if(height <= 450) color = colorArray[10]\r\n  if(height <= 350) color = colorArray[8]\r\n  if(height <= 250) color = colorArray[7]\r\n  if(height <= 150) color = colorArray[12]\r\n  if(height <= 80) color = colorArray[5]\r\n\r\n  return color;\r\n};\r\n\r\nexport default ({ height, id, current, width }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: height,\r\n        backgroundColor: getColor(height),\r\n        width: width\r\n      }}\r\n      className = {current === true ? 'column current-column' : 'column shadow-sm'}\r\n      id={`column-${id}`}\r\n    ></div>\r\n  );\r\n};\r\n","export default function useFunctions() {\r\n  return {\r\n    getRandomInt: (min, max) => {\r\n      min = Math.ceil(min);\r\n      max = Math.floor(max);\r\n      return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n    },\r\n    getRandomArray: (max, min, n) => {\r\n      let arr = Array(n).fill(0);\r\n      arr.forEach((item, index) => {\r\n        arr[index] = Math.floor(Math.random() * (max - min)) + min;\r\n      });\r\n      return arr;\r\n    },\r\n    calcWidth: (screenWidth, numberOfCols) => {\r\n      let x = screenWidth / numberOfCols;\r\n      if (x > 30) {\r\n        return 20;\r\n      } else {\r\n        return x - 10;\r\n      }\r\n    },\r\n    calcHeight: (screenHeight)=>{\r\n      let x = screenHeight * 0.50\r\n\r\n      if(x > 400){\r\n        return 400\r\n      }\r\n      else{\r\n        return x\r\n      }\r\n    }\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Column from \"./widgets/column\";\r\nimport useFunctions from \"./useFunctions/useFunctions\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport ViewWeekIcon from \"@material-ui/icons/ViewWeek\";\r\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FastRewindIcon from \"@material-ui/icons/FastRewind\";\r\nlet currentColumn = 0;\r\nlet swapped = [];\r\nconst { getRandomArray, calcWidth, calcHeight } = useFunctions();\r\n\r\nlet timer;\r\n// for number of 20 items\r\nlet screenWidth = window.innerWidth;\r\nlet screenHeight = window.innerHeight;\r\nlet numberOfCols = 20;\r\n\r\nwindow.addEventListener(\"resize\", function() {\r\n  window.location.reload();\r\n});\r\nexport default props => {\r\n  const [sort, setsort] = useState(props.sort);\r\n  const [speed, setspeed] = useState(50);\r\n  const [numberOfColumns, setnumberOfColumns] = useState(numberOfCols);\r\n  let width = calcWidth(screenWidth, numberOfColumns);\r\n  let max = calcHeight(screenHeight);\r\n  const [columnsArray, setcolumnsArray] = useState(\r\n    getRandomArray(max, 1, numberOfColumns)\r\n  );\r\n  const [start, setstart] = useState(false);\r\n\r\n  const getNewArray = () => {\r\n    setcolumnsArray(getRandomArray(max, 1, numberOfColumns));\r\n    currentColumn = 0\r\n    swapped = [];\r\n    setstart(false)\r\n  };\r\n  const renderCols = () => {\r\n    return columnsArray.map((c, index) => {\r\n      let current =\r\n        index === currentColumn || index === currentColumn + 1 ? true : false;\r\n      return (\r\n        <Column\r\n          key={index}\r\n          id={index}\r\n          height={c}\r\n          width={width}\r\n          current={current}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  const actionCenter = () => {\r\n    return (\r\n      <div className=\"d-flex justify-content-center bg-warning align-items-baseline\">\r\n        <button\r\n          onClick={() => {\r\n            handleColumnsChange(10);\r\n          }}\r\n          className=\"btn btn-sm btn-success m-2\"\r\n          type=\"button\"\r\n          disabled={start}\r\n        >\r\n          +\r\n          <ViewWeekIcon />\r\n        </button>\r\n        {numberOfColumns}\r\n        <button\r\n          onClick={() => {\r\n            handleColumnsChange(-10);\r\n          }}\r\n          className=\"btn btn-sm btn-danger m-2\"\r\n          type=\"button\"\r\n          disabled={start}\r\n        >\r\n          -\r\n          <ViewWeekIcon />\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            handleSpeedChange(\"+\");\r\n          }}\r\n          className=\"btn btn-sm btn-success m-2\"\r\n          type=\"button\"\r\n          disabled={start}\r\n        >\r\n          <FastForwardIcon />\r\n          Speed Up\r\n        </button>\r\n        {speed}\r\n        <button\r\n          onClick={() => {\r\n            handleSpeedChange(\"-\");\r\n          }}\r\n          className=\"btn btn-sm btn-danger m-2\"\r\n          type=\"button\"\r\n          disabled={start}\r\n        >\r\n          <FastRewindIcon />\r\n          Slow Down\r\n        </button>\r\n        <span>Current delay: {speed}</span>\r\n      </div>\r\n    );\r\n  };\r\n  const handleSpeedChange = s => {\r\n    if (s === \"+\") {\r\n      if (speed > 10) {\r\n        setspeed(speed - 10);\r\n      }\r\n    }\r\n    if (s === \"-\") {\r\n      if (speed > -1) {\r\n        setspeed(speed + 50);\r\n      }\r\n    }\r\n  };\r\n  const handleColumnsChange = n => {\r\n    if (start) return false;\r\n    if (numberOfColumns + n > 10 && numberOfColumns + n < 200) {\r\n      setnumberOfColumns(numberOfColumns + n);\r\n      getNewArray();\r\n    }\r\n  };\r\n\r\n  const swap = (left, right) => {\r\n    let newArray = [...columnsArray];\r\n    if (columnsArray[left] > columnsArray[left + 1]) {\r\n      let leftItem = columnsArray[left];\r\n      let rightItem = columnsArray[left + 1];\r\n      columnsArray[left] = rightItem;\r\n      columnsArray[right] = leftItem;\r\n      newArray = [...columnsArray];\r\n    }\r\n    if (currentColumn >= columnsArray.length - swapped.length) {\r\n      currentColumn = 0;\r\n      swapped.push(right);\r\n      console.log(\"added to swapped\", right);\r\n    } else {\r\n      currentColumn++;\r\n    }\r\n    setcolumnsArray(newArray);\r\n    if (swapped.length === columnsArray.length - 1) {\r\n      currentColumn = -2;\r\n      setstart(false)\r\n      stop();\r\n    }\r\n  };\r\n\r\n  const bubbleSort = () => {\r\n    swap(currentColumn, currentColumn + 1);\r\n  };\r\n\r\n  function startSort() {\r\n    if (start) {\r\n      timer = setTimeout(bubbleSort, speed);\r\n    }\r\n  }\r\n\r\n  function stop() {\r\n    setstart(false);\r\n    clearTimeout(timer);\r\n  }\r\n  startSort();\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"bg-light p-1\">\r\n        <h1>Bubble Sort </h1>\r\n      </div>\r\n      {/* Action center */}\r\n      <div className=\"d-flex justify-content-between mt-2\">\r\n        <button onClick={getNewArray} className=\"btn btn-warning\">\r\n          Create New\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setstart(!start);\r\n          }}\r\n          className=\"btn btn-success\"\r\n        >\r\n          {start ? <span>Pause Sort</span> : <span>Start Sort</span>}\r\n        </button>\r\n      </div>\r\n      <div>{start && <LinearProgress />}</div>\r\n      <div className=\"row shadow columns-container\">\r\n        <div>{renderCols()}</div>\r\n      </div>\r\n      {actionCenter()}\r\n      {/* Information box */}\r\n      <div className=\"mt-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n              It will take {(numberOfColumns * (numberOfColumns - 1)) / 2} moves\r\n              to sort this array\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n              Number of Columns : {numberOfColumns}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {start && <LinearProgress color='secondary'/>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Column from \"./column\";\r\nimport useFunctions from \"../useFunctions/useFunctions\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport ViewWeekIcon from \"@material-ui/icons/ViewWeek\";\r\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\r\nimport FastRewindIcon from \"@material-ui/icons/FastRewind\";\r\n\r\nconst { getRandomArray, calcWidth, calcHeight } = useFunctions();\r\nlet screenWidth = window.innerWidth;\r\nlet screenHeight = window.innerHeight;\r\nlet numberOfCols = 20;\r\n\r\nwindow.addEventListener(\"resize\", function() {\r\n  window.location.reload();\r\n});\r\nexport default props => {\r\n  const [speed, setspeed] = useState(500);\r\n  const [numberOfColumns, setnumberOfColumns] = useState(numberOfCols);\r\n  let width = calcWidth(screenWidth, numberOfColumns);\r\n  let max = calcHeight(screenHeight);\r\n  const [columnsArray, setcolumnsArray] = useState(\r\n    getRandomArray(max, 1, numberOfColumns)\r\n  );\r\n  const [start, setstart] = useState(false);\r\n\r\n  const getNewArray = () => {\r\n    setcolumnsArray(getRandomArray(max, 1, numberOfColumns));\r\n  };\r\n\r\n  const actionCenter = () => {\r\n    return (\r\n      <div className=\"d-flex justify-content-center bg-warning align-items-baseline\">\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault()\r\n            handleColumnsChange(10);\r\n            return false\r\n          }}\r\n          className=\"btn btn-sm btn-success m-2\"\r\n          type=\"button\"\r\n          disabled={start}\r\n        >\r\n          +\r\n          <ViewWeekIcon />\r\n        </button>\r\n        {numberOfColumns}\r\n        <button\r\n          onClick={() => {\r\n            handleColumnsChange(-10);\r\n          }}\r\n          className=\"btn btn-sm btn-danger m-2\"\r\n          type=\"button\"\r\n          disabled={start}\r\n        >\r\n          -\r\n          <ViewWeekIcon />\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            handleSpeedChange(\"+\");\r\n          }}\r\n          className=\"btn btn-sm btn-success m-2\"\r\n          type=\"button\"\r\n          disabled={start}\r\n        >\r\n          <FastForwardIcon />\r\n          Speed Up\r\n        </button>\r\n        {speed}\r\n        <button\r\n          onClick={() => {\r\n            handleSpeedChange(\"-\");\r\n          }}\r\n          className=\"btn btn-sm btn-danger m-2\"\r\n          type=\"button\"\r\n          disabled={start}\r\n        >\r\n          <FastRewindIcon />\r\n          Slow Down\r\n        </button>\r\n        <span>Current delay: {speed}</span>\r\n      </div>\r\n    );\r\n  };\r\n  const handleSpeedChange = s => {\r\n    if (s === \"+\") {\r\n      if (speed > 10) {\r\n        setspeed(speed - 10);\r\n      }\r\n      if(speed > 100){\r\n        setspeed(speed - 50)\r\n      }\r\n    }\r\n    if (s === \"-\") {\r\n      if (speed > -1) {\r\n        setspeed(speed + 50);\r\n      }\r\n    }\r\n  };\r\n  const handleColumnsChange = n => {\r\n    if (!start){      \r\n      if (numberOfColumns + n > 10 && numberOfColumns + n < 200) {\r\n        setnumberOfColumns(numberOfColumns + n);\r\n        getNewArray();\r\n      }\r\n    };\r\n  }\r\n\r\n  const display = (cols) => {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {/* Action center */}\r\n        <div className=\"d-flex justify-content-between mt-2\">\r\n          <button onClick={getNewArray} className=\"btn btn-warning\">\r\n            Create New\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setstart(!start);\r\n            }}\r\n            className=\"btn btn-success\"\r\n          >\r\n            {start ? <span>Pause Sort</span> : <span>Start Sort</span>}\r\n          </button>\r\n        </div>\r\n        {/* <div>{start && <LinearProgress />}</div> */}\r\n        <div className=\"row shadow columns-container\">\r\n          <div>{cols}</div>\r\n        </div>\r\n        {actionCenter()}\r\n        {/* Information box */}\r\n        <div className=\"mt-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"alert alert-primary\" role=\"alert\">\r\n                It will take {(numberOfColumns * (numberOfColumns - 1)) / 2}{\" \"}\r\n                moves to sort this array\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <div className=\"alert alert-success\" role=\"alert\">\r\n                Number of Columns : {numberOfColumns}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return {\r\n    display: display,\r\n    setcolumnsArray: setcolumnsArray,\r\n    columnsArray: columnsArray,\r\n    start: start,\r\n    setstart:setstart,\r\n    speed: speed,\r\n    width: width\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Column from \"./widgets/column\";\r\nimport columns from \"./widgets/columns\";\r\nlet timer;\r\nlet currentColumn = 0,\r\n  currentMin = 0;\r\nexport default params => {\r\n\r\n  const {\r\n    display,\r\n    setcolumnsArray,\r\n    columnsArray,\r\n    start,\r\n    setstart,\r\n    speed,\r\n    width\r\n  } = columns();\r\n  const renderCols = (x, y) => {\r\n    return columnsArray.map((c, index) => {\r\n      let current = index === x || index === y ? true : false;\r\n      return (\r\n        <Column\r\n          key={index}\r\n          id={index}\r\n          height={c}\r\n          width={width}\r\n          current={current}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  const swap = (current, min) => {\r\n    let x = columnsArray[current];\r\n    columnsArray[current] = columnsArray[min];\r\n    columnsArray[min] = x;\r\n  };\r\n\r\n  function startSort() {\r\n    if (start) {\r\n      timer = setTimeout(selectionSort, speed);\r\n    } else {\r\n      stop();\r\n    }\r\n  }\r\n  function stop() {\r\n    clearTimeout(timer);\r\n    start && setstart(false)\r\n  }\r\n\r\n  const selectionSort = () => {\r\n    if (columnsArray[currentMin] > columnsArray[currentColumn]) {\r\n      swap(currentMin, currentColumn);\r\n    }\r\n    currentColumn++;\r\n    if (currentColumn === columnsArray.length) {\r\n      currentColumn = currentMin + 1;\r\n      currentMin++;\r\n    }\r\n\r\n    setcolumnsArray([...columnsArray]);\r\n    if (currentMin === columnsArray.length) {\r\n        stop();\r\n        return true;\r\n      }\r\n\r\n  };\r\n  startSort();\r\n  return (\r\n    <div>\r\n      <div className=\"bg-light p-1\">\r\n        <h1>Selection Sort</h1>\r\n      </div>\r\n      {display(renderCols(currentMin, currentColumn))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\n\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500\r\n  }\r\n});\r\n\r\nexport default function Layout(props) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <div className='d-flex justify-content-center'>\r\n\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          history.push(`/${newValue}`);\r\n          setValue(newValue);\r\n        }}\r\n        showLabels\r\n        className={classes.root} \r\n      >\r\n        <h5 className='mt-2'>Sorting Algorithms</h5>\r\n        <BottomNavigationAction\r\n          value=\"bubble\"\r\n          label=\"Buble\"\r\n          icon={<BubbleChartIcon />}\r\n        />\r\n        <BottomNavigationAction\r\n          value=\"selection\"\r\n          label=\"Selection\"\r\n          icon={<SelectAllIcon />}\r\n        />\r\n        <BottomNavigationAction label=\"Coming Soon..\" icon={<LocationOnIcon />} />\r\n      </BottomNavigation>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Bubble from \"./components/bubble\";\r\nimport Selection from \"./components/selection\";\r\nimport Columns from './components/widgets/columns'\r\nimport Layout from \"./components/layout\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Layout />\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/bubble\">\r\n            <Bubble sort='bubble'/>\r\n          </Route>\r\n          <Route path=\"/selection\">\r\n            <Selection sort='selection' />\r\n          </Route>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './css/columns.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route\r\n} from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(<Router basename='/sorting-algorithms'><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}